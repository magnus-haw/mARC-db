# Generated by Django 2.1 on 2018-09-06 21:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.FloatField(verbose_name='Time [s]')),
                ('voltage', models.FloatField(blank=True, null=True, verbose_name='Arc Voltage [V]')),
                ('current', models.FloatField(blank=True, null=True, verbose_name='Current [A]')),
                ('chamber_pressure', models.FloatField(blank=True, null=True, verbose_name='ChamberPressure [Pa]')),
                ('column_pressure', models.FloatField(blank=True, null=True, verbose_name='ColumnPressure [Pa]')),
                ('plasma_gas', models.FloatField(blank=True, null=True, verbose_name='PlasmaGas [g/s]')),
                ('shield_gas', models.FloatField(blank=True, null=True, verbose_name='ShieldGas [g/s]')),
                ('anode_deltaT', models.FloatField(blank=True, null=True, verbose_name='AnodeDeltaT [degC]')),
                ('cathode_return', models.FloatField(blank=True, null=True, verbose_name='Cathode Return [degC]')),
                ('cathode_supply', models.FloatField(blank=True, null=True, verbose_name='Cathode Supply [degC]')),
                ('currentSC', models.FloatField(blank=True, null=True, verbose_name='CurrentSC [A]')),
                ('pitot_temp', models.FloatField(blank=True, null=True, verbose_name='PitotTemp [degC]')),
                ('pitot_pressure', models.FloatField(blank=True, null=True, verbose_name='PitotPressure [Pa]')),
                ('gardon_heat_flux', models.FloatField(blank=True, null=True, verbose_name='GardonHeatFlux [W/cm^2]')),
                ('gardon_temp', models.FloatField(blank=True, null=True, verbose_name='GardonTemp [degC]')),
                ('vex_position', models.FloatField(blank=True, null=True, verbose_name='String Pot Vex [in]')),
                ('pitot_position', models.FloatField(blank=True, null=True, verbose_name='PitotPosition [in]')),
                ('gardon_position', models.FloatField(blank=True, null=True, verbose_name='GardonPosition [in]')),
                ('vacuumpump_pressure', models.FloatField(blank=True, null=True, verbose_name='Vacuumpumps [Pa]')),
                ('kurtlesker_pirani', models.FloatField(blank=True, null=True, verbose_name='KurtLeskerPirani [Pa]')),
                ('B_RAX_pirani', models.FloatField(blank=True, null=True, verbose_name='B-RAX-Pirani [V]')),
                ('mask_data', models.BooleanField(default=False)),
                ('flags', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Sheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('columnBooleans', models.CharField(max_length=50)),
                ('notes', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Spreadsheet',
            fields=[
                ('filename', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('notes', models.TextField(null=True)),
            ],
        ),
        migrations.AddField(
            model_name='sheet',
            name='spreadsheet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.Spreadsheet'),
        ),
        migrations.AddField(
            model_name='record',
            name='sheet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.Sheet'),
        ),
        migrations.AddField(
            model_name='record',
            name='spreadsheet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.Spreadsheet'),
        ),
    ]
