# Generated by Django 2.1.11 on 2020-11-19 20:38

from django.db import migrations

def updaterunobjects(apps, schema_editor):
    Run = apps.get_model('data', 'Run')
    SettingAttachment = apps.get_model('system', 'SettingAttachment')
    FileAttachments = apps.get_model('system','FileAttachments')
    Cathode = apps.get_model('system', 'Cathode')
    Nozzle = apps.get_model('system','Nozzle')
    Disk = apps.get_model('system', 'Disk')
    Test = apps.get_model('data','Test')

    d1,d2 = Disk.objects.all()
    nozzle = Nozzle.objects.all()[0]
    test = Test.objects.get(name='mARCv2_IST')
    runs = Run.objects.filter(test=test)
    c1,c2,c3 = Cathode.objects.all().order_by('installed')
    for run in runs:
        run.nozzle = nozzle
        run.disks.add(d1)
        run.disks.add(d2)
        if run.date.date() > c3.installed:
            run.cathode = c3
        elif run.date.date() > c2.installed:
            run.cathode = c2
        elif run.date.date() > c1.installed:
            run.cathode = c1
        fa = run.fileattachments
        if fa.video.name is not '':
            sa,flag = SettingAttachment.objects.get_or_create(run=run, name=run.name+'video',description=run.name, 
                                                              file=fa.video, type='VID')
            sa.save()
        if fa.spectra.name is not '' and fa.spectra.name is not None:
            sa,flag = SettingAttachment.objects.get_or_create(run=run,name=run.name+'spectra',description=run.name+'spectral data', 
                                                              file=fa.spectra, type='DAT')
            sa.save()
        if fa.pretest_photo.name is not '':
            sa,flag = SettingAttachment.objects.get_or_create(run=run,name=run.name+'pretest_photo',description=run.name+'photo', 
                                                              file=fa.pretest_photo, type='IMG')
            sa.save()
        if fa.posttest_photo.name is not '':
            sa,flag = SettingAttachment.objects.get_or_create(run=run,name=run.name+'posttest_photo',description=run.name+'photo', 
                                                              file=fa.posttest_photo, type='IMG')
            sa.save()
        if fa.run_sheet.name is not '':
            sa,flag = SettingAttachment.objects.get_or_create(run=run,name=run.name+'run_sheet',description=run.name+ " run sheet", 
                                                              file=fa.run_sheet, type='DOC')
            sa.save()
        run.save()

class Migration(migrations.Migration):

    dependencies = [
        ('data', '0017_auto_20201118_1225'),
    ]

    operations = [
        migrations.RunPython(updaterunobjects)
    ]

#  run_sheet = models.FileField(null=True,blank=True)
#     pretest_photo = models.ImageField(null=True,blank=True)
#     posttest_photo= models.ImageField(null=True,blank=True)
#     video = models.FileField(null=True,blank=True)
#     spectra = models.FileField(null=True,blank=True)